import packageA.A;
import packageA.B;
import packageB.C;
import packageB.D;

public class Test {

    /*
    План урока
    1) Углубленное знакомство с методами
    2) Практика
     */

    /*
    Теория
    Сигнатура метода - самая первая строчка метода, содержит кроме названия тип метода, аргументы, передаваемые методу,
    расположение метода в памяти(static или не static), модификатор доступа.
    Тип метода:
    1) void - процедура(ничего не возвращает в точку вызова
    2) тип переменной(например, int) - возвращает значение этого типа в точку вызова(функция)
    3) вообще не указан тип и имеет название такое же как и класс, в котором определен - конструктор(выделяет память для
    объекта)
    Доступ(расположение):
    static - находится в классе(в области памяти Metaspace), нестатические переменные находятся в объекте, т.е. при создании
    объекта нестатические переменные дублируются в объект(в области памяти - Куча)
    Модификаторы доступа:
    В Java их 4:
    private           - доступ только в пределах класса
    default(пустой)   - доступ в пределах пакета
    protected         - доступ в пределах пакета и в классах наследниках
    public            - доступ везде

    Модификаторы доступа служат для инкапсулции(сокрытия) переменных - один из основных приемов ООП

     */

    /*
    Заметки
    Идентификатор может быть любого типа, но он должен быть уникальным
     */

    /*
    Задача
    Показать работу всех 4 модификаторов доступа в Java
    Решение
    Создадим два пакета: packageA, packageB, В каждом пакете создадим по два класса.
    Всего классов будет 4: A, B, C, D

     */

    /*
    Задачи со звездочкой
    1) Показать полиморфизм на примере методов и конструкторов
    2) Переопределить методы у класса потомка
    3) Создать консольный калькулятор, который будет выполнять вычисления, до команды пользователя их прекратить
     */

    public static void main(String[] args) {
           Car car = new Car(10000, "Volkswagen", 180.5);
           System.out.println(car.id);

           Car car1 = new Car(11000, "Volkswagen", 190);
           System.out.println(car1.id);

        Car car2 = new Car(11000, "Volkswagen", 190);
        System.out.println(car2.id);

        System.out.println(car2.speed);

        Car car3 = new Car(20000, "Marcedes", 220);
        System.out.println(car3.id);

        car.out();
        car3.out();

        System.out.println("Модификаторы доступа: ");

        A a = new A();
        B b = new B();
        C c = new C();
        D d = new D();

        a.out();
        b.out();
        c.out();
        d.out();
    }

    /*
    Дз
    1) Создать класс Animal c полями: age, weight, name, id реализовать автогенерацию id, добавить метод(процедуру) для
    вывода полей объекта
    2)* Показать работу модификаторов доступа
     */

    /*
    ДЗ со звездочкой
    1) Создать класс для работы с массивом через статические переменные
    2) Создать класс для работы с массивом через объекты - нестатические переменные
    3)* Создать общий класс родитель для этих классов и вынести его в отдельный пакет - задача создать библиотеку для других
    программистов.
     */
}
